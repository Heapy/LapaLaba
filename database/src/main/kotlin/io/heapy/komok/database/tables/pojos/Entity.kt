/*
 * This file is generated by jOOQ.
 */
package io.heapy.komok.database.tables.pojos


import io.heapy.komok.database.tables.interfaces.IEntity

import org.jooq.JSONB


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class Entity(
    override val entityId: Long? = null,
    override val attribute: String,
    override val value: JSONB? = null,
    override val tx: Long,
    override val op: Boolean
): IEntity {

    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: Entity = other as Entity
        if (this.entityId == null) {
            if (o.entityId != null)
                return false
        }
        else if (this.entityId != o.entityId)
            return false
        if (this.attribute != o.attribute)
            return false
        if (this.value == null) {
            if (o.value != null)
                return false
        }
        else if (this.value != o.value)
            return false
        if (this.tx != o.tx)
            return false
        if (this.op != o.op)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.entityId == null) 0 else this.entityId.hashCode())
        result = prime * result + this.attribute.hashCode()
        result = prime * result + (if (this.value == null) 0 else this.value.hashCode())
        result = prime * result + this.tx.hashCode()
        result = prime * result + this.op.hashCode()
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Entity (")

        sb.append(entityId)
        sb.append(", ").append(attribute)
        sb.append(", ").append(value)
        sb.append(", ").append(tx)
        sb.append(", ").append(op)

        sb.append(")")
        return sb.toString()
    }
}
