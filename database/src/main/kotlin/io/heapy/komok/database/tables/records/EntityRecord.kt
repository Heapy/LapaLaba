/*
 * This file is generated by jOOQ.
 */
package io.heapy.komok.database.tables.records


import io.heapy.komok.database.tables.Entity
import io.heapy.komok.database.tables.interfaces.IEntity

import org.jooq.JSONB
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class EntityRecord private constructor() : TableRecordImpl<EntityRecord>(Entity.ENTITY), IEntity {

    open override var entityId: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open override var attribute: String
        set(value): Unit = set(1, value)
        get(): String = get(1) as String

    open override var value: JSONB?
        set(value): Unit = set(2, value)
        get(): JSONB? = get(2) as JSONB?

    open override var tx: Long
        set(value): Unit = set(3, value)
        get(): Long = get(3) as Long

    open override var op: Boolean
        set(value): Unit = set(4, value)
        get(): Boolean = get(4) as Boolean

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    fun from(from: IEntity) {
        this.entityId = from.entityId
        this.attribute = from.attribute
        this.value = from.value
        this.tx = from.tx
        this.op = from.op
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised EntityRecord
     */
    constructor(entityId: Long? = null, attribute: String, value: JSONB? = null, tx: Long, op: Boolean): this() {
        this.entityId = entityId
        this.attribute = attribute
        this.value = value
        this.tx = tx
        this.op = op
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised EntityRecord
     */
    constructor(value: io.heapy.komok.database.tables.pojos.Entity?): this() {
        if (value != null) {
            this.entityId = value.entityId
            this.attribute = value.attribute
            this.value = value.value
            this.tx = value.tx
            this.op = value.op
            resetChangedOnNotNull()
        }
    }
}
