/*
 * This file is generated by jOOQ.
 */
package io.heapy.komok.database.tables.records


import io.heapy.komok.database.tables.Entity
import io.heapy.komok.database.tables.interfaces.IEntity

import org.jooq.JSONB
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class EntityRecord private constructor() : TableRecordImpl<EntityRecord>(Entity.ENTITY), IEntity {

    open override var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open override var `data`: JSONB
        set(value): Unit = set(1, value)
        get(): JSONB = get(1) as JSONB

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    fun from(from: IEntity) {
        this.id = from.id
        this.`data` = from.`data`
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised EntityRecord
     */
    constructor(id: Long? = null, `data`: JSONB): this() {
        this.id = id
        this.`data` = `data`
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised EntityRecord
     */
    constructor(value: io.heapy.komok.database.tables.pojos.Entity?): this() {
        if (value != null) {
            this.id = value.id
            this.`data` = value.`data`
            resetChangedOnNotNull()
        }
    }
}
